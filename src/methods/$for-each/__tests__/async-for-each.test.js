/* @macrome
 * @generated-from ./$for-each.test.js
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncForEach } from '../../..';

describe('asyncForEach', () => {
  it('iterates over an iterable', async () => {
    const arr: Array<number> = [];
    await asyncForEach(item => arr.push(item), [1, 2, 3]);
    expect(arr).toEqual([1, 2, 3]);
  });

  it('iterates over an iterable using a promise', async () => {
    const arr: Array<number> = [];
    await asyncForEach(
      item => {
        arr.push(item);
        return Promise.resolve(0);
      },
      [1, 2, 3],
    );
    expect(arr).toEqual([1, 2, 3]);
  });

  it('iterates over an iterable (curried)', async () => {
    const arr: Array<number> = [];
    const forEachPush = asyncForEach((item: number) => arr.push(item));
    await forEachPush([1, 2, 3]);
    expect(arr).toEqual([1, 2, 3]);
  });
});
